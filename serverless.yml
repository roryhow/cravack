service: cravack

frameworkVersion: "2"

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: eu-central-1
  environment:
    SLACK_API_KEY: ${ssm:cravack_slack_api_key}
    STRAVA_CLIENT_ID: ${ssm:cravack_strava_client_id}
    STRAVA_CLIENT_SECRET: ${ssm:cravack_strava_client_secret}
    STRAVA_WEBHOOK_VERIFY_TOKEN: ${ssm:cravack_strava_webhook_verify_token}
    STRAVA_USER_AUTH_TABLE: "cravack-strava-authenticated-users-${self:provider.stage}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.STRAVA_USER_AUTH_TABLE}"

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  registerStravaWebhook:
    handler: bin/registerStravaWebhook
    events:
      - httpApi:
          path: /handleStravaActivityEvent
          method: get

  handleStravaAuthenticate:
    handler: bin/handleStravaAuthenticate
    events:
      - httpApi:
          path: /handleStravaAuthenticate
          method: get

  handleStravaActivityEvent:
    handler: bin/handleStravaActivityEvent
    events:
      - httpApi:
          path: /handleStravaActivityEvent
          method: post

  handleSlackInteractionEvent:
    handler: bin/handleSlackInteractionEvent
    events:
      - httpApi:
          path: /handleSlackInteractionEvent
          method: post

resources:
  Resources:
    stravaAuthenticatedUsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.STRAVA_USER_AUTH_TABLE}
        AttributeDefinitions:
          -
            AttributeName: "AthleteID"
            AttributeType: "N"
        KeySchema:
          -
            AttributeName: "AthleteID"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
